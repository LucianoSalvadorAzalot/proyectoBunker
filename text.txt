-------------COMPONENTE VENTA-------------


HACER VENTA COMPLETA CON CREDITO => LISTO
VENDER UNA VENTA GUARDAD => LISTO 
ELIMINAR UNA VENTA => LISTO
REGISTRAR INGRESO => LISTO
REGISTRAR EGRESO => LISTO
PODER VER TODAS LAS VENTAS SEGUN FECHA => LISTO


-------------COMPONENTE CREDITO-------------

TRAER TODOS LOS CLIENTES => LISTO
LISTAR TODO LO DE UN CLIENTE => LISTO
PAGAR UNA VENTA DEL CREDITO => LISTO
PAGAR A CUENTA => LISTO


-------------CLIENTES-------------

AGREGAR UN CLIENTE => LISTO
EDITAR UN CLIENTE => LISTO
BUSCAR UN CLIENTE => LISTO


-------------PRODCUTOS-------------

AGREGAR UN PRODUCTO => LISTO
EDITAR UN PRODUCTO => LISTO
AGREGAR EL DEPARTAMENTO => LISTO
EDITAR UN DEPARTAMENTO => LISTO


-------------COMPRA-------------

AGREGAR UNA COMPRA => LISTO
FILTRAR POR FECHA LA COMPRA => LISTO


-------------STOCK-------------

AGREGAR STOCK DE UN PRODUCTO =>  LISTO
FILTRAR EN EL STOCK => LISTO



-------------USUARIOS-------------

AGREGAR UN USUARIO => LISTO
EDITAR UN USUARIO => LISTO



-------------PROVEEDORES-------------

AGREGAR UN PORVEEDOR => LISTO
EDITAR UN PROVEEDOR => LISTO
FILTRAR PROVEEDORES => LISTO 



-------------METODO PAGO-------------

AGREGAR UN METODO => LISTO
EDITAR UN METODO => LISTO


-------------CORTE-------------


CORTE DEL DIA => LISTO
CORTE DE CAJERO => LISTO


-------------CORTE COMPRA-------------

EDITAR UNA COMPRA => LISTO
FILTRAR UNA COMPRA => LISTO



-------------REPORTE-------------

TODAS LAS TABLAS => LISTO
TODOS LOS FILTROS => LISTO

-------------CERRAR TURNO-------------
LISTO







FUNCION SIN TICKET PARA VENTA
// //FUNCION PARA SELECCIONAR UN CLIENTE PARA LA VENTA
// const FinalizarVenta = () => {
//   if (listaCompras.length === 0) {
//     alert("Debes cargar al menos 1 producto");
//   } else {
//     const Id_metodoPago = parseInt(document.getElementById("metodoPago").value); 
//     const Id_Cliente = document.getElementById("cliente").value;

//     if (Id_metodoPago === 3 && totalConCredito() > limiteCredito) {
//       alert('No se puede vender a este cliente porque superó su límite de crédito');
//       return;
//     }  

//     const totalParaTodo = SumarIntereses();

//     axios.post(`${URL}ventas/crear`, {
//       descripcion_venta: 'XDD',
//       precioTotal_venta: totalParaTodo,
//       Id_metodoPago: Id_metodoPago,
//       Id_cliente: Id_Cliente,
//       Id_sucursal: id_sucursal,
//       Id_usuario: id_usuario
//     })
//     .then(() => {
//       console.log("id", document.getElementById("cliente").value);
//       listaCompras.forEach((producto) => {
//         axios.post(`${URL}detalleVenta/crear`, {
//           descripcion_detalleVenta: 'test',
//           ventasTotales_detalleVenta: '1',
//           CantidadVendida: cantidadesVendidas[producto.Id_producto],
//           ganacia_detalleVenta: 0.0,
//           Id_venta: parseInt(Id_venta),
//           Id_producto: producto.Id_producto,
//           Id_caja: IdCaja,
//           IdEstadoCredito: 1,
//           IdEstadoVenta: 1
//         })
//         .then(() => {
//           console.log('a ver q pasa JR', producto.Id_producto);
//           console.log('a ver q pasa', Id_venta);
//           axios.put(`${URL}ventas/descStock`, {
//             Id_sucursal: id_sucursal,
//             Id_producto: producto.Id_producto,
//             cantidad: cantidadesVendidas[producto.Id_producto],
//           });
//         })
//         .then(() => {
//           if (producto.Id_paquete === undefined) {
//             console.log('No hay paquete');
//           } else {
//             console.log('q onda xd', producto.cantidadProducto);
//             producto.productos.forEach(productoIndividual => {
//               console.log('Id_producto:', productoIndividual.Id_producto);
//               axios.put(`${URL}paquete/put/descPaquete`, {
//                 Id_sucursal: id_sucursal, 
//                 Id_producto: productoIndividual.Id_producto,
//                 cantidad: cantidadesVendidas[producto.Id_producto] * productoIndividual.cantidadProducto
//               });
//             });
//           }
//         })
//         .then(() => {
//           if (Id_metodoPago === 5 ||  credito.length > 0) {
//             axios.put(`${URL}ventas/aumentarCredito`, {
//               Id_cliente: Id_Cliente,
//               montoCredito: credito || totalParaTodo
//             }).then(()=>{
//               console.log("todo bien en credito", credito)
//             })
//             .catch((error) => {
//               console.log('casi pero no', error);
//               console.log('id meto pago', Id_metodoPago);
//               console.log('id cliente', Id_Cliente);
//               console.log('id venta', Id_venta);
//               console.log('credito', credito)
//             });
//           } else {
//             console.log('error al asignar el crédito');
//           }
//         });
//       });
//       listaCompras.length = 0;
//       Swal.fire({
//         title: " <strong>Venta exitosa!</strong>",
//         html: "<i>La venta <strong> </strong> fue agregada con éxito</i>",
//         icon: 'success',
//         timer: 3000
//       });
//       setEstadoModal1(false);
//       handleCloseModal(true);
//       testID();
//       setCantidadesVendidas({});
//       console.log('usuario ', id_usuario);
//       console.log('credito 2 ', credito)
//       console.log('MP ', Id_metodoPago);
//       console.log('Id_venta cuando sale bien', Id_venta);
//     })
//     .catch((error) => {
//       console.log('Hubo un error:', error);
//     });
//   }
// };